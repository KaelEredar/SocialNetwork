{"version":3,"file":"static/js/254.d1847757.chunk.js","mappings":"wLACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCE3MA,EAAa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACjBC,EAAO,YAAcF,EACzB,OACI,gBAAKG,UAAWC,EAAW,IAAMA,EAAjC,UACI,SAAC,KAAD,CAASC,GAAIH,EAAb,SAAoBD,OAK1BK,EAAU,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACd,OACI,gBAAKJ,UAAWC,EAAhB,SAA4BG,KA8CpC,EA1CgB,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,qBAAsBC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,YAE7CC,GAFsE,EAAZC,OAExCF,EAAYG,YAC7BC,KAAI,SAAAC,GAAC,OAAI,SAAChB,EAAD,CAAYC,GAAIe,EAAEf,GAAeC,KAAMc,EAAEd,MAAdc,EAAEf,QAEvCgB,EAAmBN,EAAYO,SAC9BH,KAAI,SAAAI,GAAC,OAAI,SAACZ,EAAD,CAASC,QAASW,EAAEX,QAASY,IAAKD,EAAElB,QAWlD,OACI,iBAAKG,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKO,KAEL,iBAAKR,UAAWC,EAAhB,WACI,yBAAMY,KACN,4BACI,0BACI,qBACAI,MAAOV,EAAYW,eACnBC,YAAY,qBACZC,SAjBO,SAACC,GAC1B,IAAIC,EAAOD,EAAEE,OAAON,MACpBZ,EAAqBiB,SAmBP,0BACI,mBAAQE,QA1BD,WACvBlB,KAyBgB,8B,8BCrBxB,GAAemB,E,QAAAA,KACXC,EAAAA,EAAAA,KAxBoB,SAACC,GACvB,MAAM,CACFpB,YAAaoB,EAAMpB,gBAIE,SAACqB,GAC1B,MAAO,CACHvB,qBAAsB,SAACiB,GACnBM,GAASC,EAAAA,EAAAA,IAA4BP,KAEzChB,YAAa,WACTsB,GAASE,EAAAA,EAAAA,YAafC,EAAAA,EAFJ,CAGEC","sources":["webpack://my-first-react-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__HhxmI\",\"dialogsItems\":\"Dialogs_dialogsItems__nke7x\",\"active\":\"Dialogs_active__N5S6H\",\"dialog\":\"Dialogs_dialog__nSUej\",\"messages\":\"Dialogs_messages__B-gji\",\"message\":\"Dialogs_message__MZIqc\"};","import s from './Dialogs.module.css'\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = ({id, name}) => {\r\n    let path = '/dialogs/' + id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Message = ({message}) => {\r\n    return (\r\n        <div className={s.message}>{message}</div>\r\n    );\r\n}\r\n\r\nconst Dialogs = ({updateNewMessageBody, sendMessage, dialogsPage, isAuth}) => {\r\n\r\n    let dialogsElements = dialogsPage.dialogsData\r\n        .map(d => <DialogItem id={d.id} key={d.id} name={d.name}/>)\r\n\r\n    let messagesElements = dialogsPage.messages\r\n        .map(m => <Message message={m.message} keu={m.id}/>)\r\n\r\n    const onSendMessageClick = () => {\r\n        sendMessage();\r\n    }\r\n\r\n    const onNewMessageChange = (e) => {\r\n      let body = e.target.value;\r\n      updateNewMessageBody(body);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea\r\n                        value={dialogsPage.newMessageBody}\r\n                        placeholder=\"Enter your message\"\r\n                        onChange={onNewMessageChange}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n      dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      updateNewMessageBody: (body) => {\r\n          dispatch(updateNewMessageBodyCreator(body))\r\n      },\r\n      sendMessage: () => {\r\n          dispatch(sendMessageCreator())\r\n      }\r\n  }\r\n}\r\n\r\n\r\n// const AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n//\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (AuthRedirectComponent);\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);;"],"names":["DialogItem","id","name","path","className","s","to","Message","message","updateNewMessageBody","sendMessage","dialogsPage","dialogsElements","isAuth","dialogsData","map","d","messagesElements","messages","m","keu","value","newMessageBody","placeholder","onChange","e","body","target","onClick","compose","connect","state","dispatch","updateNewMessageBodyCreator","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}